{"version":3,"sources":["webpack://src/index.css","webpack://src/App.scss","webpack://src/mixin.scss"],"names":[],"mappings":"AAAA,KACC,QAAS,CACT,mJAEW,CACX,kCAAmC,CACnC,iCAAkC,CAClC,YAED,CACA,UAFC,eAID,CAEA,KACC,yEAED,CCdA,KACC,YAAa,CACb,kBAAmB,CAKnB,yBAPD,KAKE,eAAgB,CAEjB,CAED,uBACC,qBAAuB,CACvB,kBAA4B,CAC5B,UAAY,CAMZ,yBATD,uBAME,wBAA2B,CAC3B,qBAAuB,CAExB,CAGA,mBACC,iBAAkB,CAOlB,yBARD,mBAGE,0BAA4B,CAK7B,CAED,sBACC,iCAAsC,CAWtC,yBAZD,sBAGE,UAAW,CACX,YAAa,CACb,iBAAkB,CAOnB,CCOA,yBDnBD,sBASE,WAAY,CACZ,sBAA4B,CAE7B,CAGA,wBACC,YAAa,CACb,wBAAyB,CACzB,oCAKA,mBAAqB,CACrB,yBAHD,yDAQG,wBAA0B,CAR7B,oDAQG,wBAA0B,CAR7B,2CAQG,wBAA0B,CAC1B,CAKJ,oBACC,eAAgB,CADhB,uBAGC,wBAA0B,CAC1B,6CAAmD,CACnD,yBAGA,+GACmD,CACnD,cAAe,CACf,kBAAmB,CACnB,8BAGA,aAAuB,CACvB,kBAID,4BAAiC,CACjC,UAAY,CACZ,qBAAuB,CACvB,kBAAoB,CACpB,mBAAqB,CACrB,uBAGA,aAAyB","file":"main.b97962e5.chunk.css","sourcesContent":["body {\n\tmargin: 0;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n\t\t\"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n\t\tsans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\theight: 100vh;\n\toverflow: hidden;\n}\nhtml {\n\toverflow: hidden;\n}\n\ncode {\n\tfont-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n\t\tmonospace;\n}\n","@import \"~antd/dist/antd.css\";\n@import \"./mixin.scss\";\n\n.App {\n\tdisplay: grid;\n\tplace-items: center;\n\n\t@include respond-to($tablet-portrait-up) {\n\t\tmargin-top: 3rem;\n\t}\n}\n\n.ant-input-group-addon {\n\twidth: 10rem !important;\n\tbackground: rgb(126, 27, 27);\n\tcolor: white;\n\n\t@include respond-to($small-phone) {\n\t\tfont-size: 12px !important ;\n\t\twidth: 135px !important;\n\t}\n}\n\n.calculator {\n\t&__title {\n\t\ttext-align: center;\n\t\t@include respond-to($small-phone) {\n\t\t\tfont-size: 1.2rem !important;\n\t\t}\n\n\t\t@include respond-to($tablet-portrait-up) {\n\t\t}\n\t}\n\n\t&__outerdiv {\n\t\tbackground: rgba(211, 179, 179, 0.589);\n\t\t@include respond-to($small-phone) {\n\t\t\twidth: 100%;\n\t\t\theight: 100vh;\n\t\t\tpadding: 2rem 1rem;\n\t\t}\n\n\t\t@include respond-to($tablet-portrait-up) {\n\t\t\twidth: 40rem;\n\t\t\tpadding: 1rem 2rem 2rem 2rem;\n\t\t}\n\t}\n\n\t&__button {\n\t\t&-div {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t}\n\t}\n\n\t&__input {\n\t\t&:not(:last-child) {\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\n\t\t& .ant-input {\n\t\t\t@include respond-to($small-phone) {\n\t\t\t\t&::placeholder {\n\t\t\t\t\tfont-size: 12px !important;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__result {\n\t\tmargin-top: 1rem;\n\t\t& h2 {\n\t\t\tfont-size: 15px !important;\n\t\t\tborder-bottom: 1px solid rgba(170, 170, 170, 0.562);\n\t\t}\n\n\t\t&-text {\n\t\t\tfont-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\",\n\t\t\t\t\"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\n\t\t\tfont-size: 12px;\n\t\t\tfont-weight: bolder;\n\t\t}\n\n\t\t&-highlight {\n\t\t\tcolor: rgb(187, 77, 77);\n\t\t}\n\t}\n\n\t&__desc {\n\t\tbackground: rgba(67, 0, 0, 0.597);\n\t\tcolor: white;\n\t\tborder: 1px solid white;\n\t\tpadding: 0.5rem 1rem;\n\t\tmargin-bottom: 0.5rem;\n\t}\n\n\t&__highlight {\n\t\tcolor: rgb(255, 212, 132);\n\t}\n}\n","// mixin media query\r\n$break-small: 576px;\r\n$break-landscape: 480px;\r\n$break-tablet: 768px;\r\n$break-medium: 1200px;\r\n\r\n// if have scss intellisense it will autocomplete the variable\r\n$small-phone: small-phone;\r\n$phone-only: phone-only;\r\n$tablet-portrait-up: tablet-portrait-up;\r\n$tablet-landscape-up: tablet-landscape-up;\r\n$desktop-up: desktop-up;\r\n$big-desktop-up: big-desktop-up;\r\n\r\n// @mixin respond-to($media) {\r\n//   @if $media == mobile {\r\n//     //  < 576\r\n//     @media only screen and (max-width: $break-small) {\r\n//       @content;\r\n//     }\r\n//   } @else if $media == mobile-landscape {\r\n//     @media only screen and (max-height: $break-landscape) {\r\n//       @content;\r\n//     }\r\n//   } @else if $media == tablet {\r\n//     @media only screen and (max-width: $break-tablet) {\r\n//       @content;\r\n//     }\r\n//   } @else if $media == medium {\r\n//     @media only screen and (min-width: $break-tablet + 1) and (max-width: $break-medium) {\r\n//       @content;\r\n//     }\r\n//   }\r\n// }\r\n@mixin respond-to($range) {\r\n\t$small-phone-upper-boundary: 576px;\r\n\t$phone-upper-boundary: 768px;\r\n\t$tablet-portrait-upper-boundary: 900px;\r\n\t$tablet-landscape-upper-boundary: 1200px;\r\n\t$desktop-upper-boundary: 1800px;\r\n\r\n\t@if $range == small-phone {\r\n\t\t// <= 576px\r\n\t\t@media (max-width: #{$small-phone-upper-boundary}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else if $range == phone-only {\r\n\t\t// >= 576px\r\n\t\t@media (min-width: #{$small-phone-upper-boundary}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else if $range == tablet-portrait-up {\r\n\t\t//  >= 768px\r\n\t\t@media (min-width: $phone-upper-boundary) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else if $range == tablet-landscape-up {\r\n\t\t//  >= 900px\r\n\t\t@media (min-width: $tablet-portrait-upper-boundary) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else if $range == desktop-up {\r\n\t\t//  >= 1200px\r\n\t\t@media (min-width: $tablet-landscape-upper-boundary) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else if $range == big-desktop-up {\r\n\t\t//  >= 1800px\r\n\t\t@media (min-width: $desktop-upper-boundary) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n"]}