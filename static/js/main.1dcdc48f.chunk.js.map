{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","leverage","walletSize","maxLoss","entryPrice","stopLoss","data","setData","maxMargin","setMaxMargin","maxQuota","setMaxQuota","priceDifference","setPriceDifference","differencePerct","setDifferencePerct","unrealizedPNL","setUnrealizedPNL","useEffect","axios","get","then","res","console","log","catch","err","movePerct","difference","Math","abs","className","addonBefore","value","type","placeholder","onChange","e","parseFloat","target","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcdc48f.chunk.js","sourcesContent":["import \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\nimport axios from \"axios\";\n\nfunction App() {\n\tinterface IData {\n\t\tleverage: any;\n\t\twalletSize: any;\n\t\tmaxLoss: any;\n\t\tentryPrice: any;\n\t\tstopLoss: any;\n\t}\n\tconst [data, setData] = useState<IData>({\n\t\tleverage: \"\",\n\t\twalletSize: \"\",\n\t\tmaxLoss: \"\",\n\t\tentryPrice: \"\",\n\t\tstopLoss: \"\",\n\t});\n\n\tconst [maxMargin, setMaxMargin] = useState(0);\n\tconst [maxQuota, setMaxQuota] = useState(0);\n\tconst [priceDifference, setPriceDifference] = useState(0);\n\tconst [differencePerct, setDifferencePerct] = useState(0);\n\tconst [unrealizedPNL, setUnrealizedPNL] = useState(0);\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t\"https://api.countapi.xyz/hit/lcly.github.io/fdd61830-047f-4a21-b445-9064edec6acc?callback=websiteVisits\"\n\t\t\t)\n\t\t\t.then((res) => console.log(res))\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlet movePerct = data.entryPrice / 100;\n\n\t\tlet difference = Math.abs(data.entryPrice - data.stopLoss);\n\t\tsetPriceDifference(difference);\n\t\tlet differencePerct = difference / movePerct;\n\t\tsetDifferencePerct(differencePerct);\n\t\tlet unrealizedPNL = differencePerct * data.leverage; // in percentage e.g. 750%\n\t\tsetUnrealizedPNL(unrealizedPNL);\n\t\tlet maxMargin = data.maxLoss / (unrealizedPNL / 100);\n\t\tif (\n\t\t\tdata.leverage !== \"\" &&\n\t\t\tdata.walletSize !== \"\" &&\n\t\t\tdata.maxLoss !== \"\" &&\n\t\t\tdata.entryPrice !== \"\" &&\n\t\t\tdata.stopLoss !== \"\"\n\t\t) {\n\t\t\tsetMaxMargin((maxMargin * data.walletSize) / 100);\n\t\t\tsetMaxQuota(maxMargin);\n\t\t}\n\t}, [data]);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='calculator__outerdiv'>\n\t\t\t\t<h1 className='calculator__title'>Wallet Risk Management Calculator</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName='calculator__input'\n\t\t\t\t\t\taddonBefore='Leverage'\n\t\t\t\t\t\tvalue={data.leverage}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder='Your Leverage e.g. 10x'\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetData({ ...data, leverage: parseFloat(e.target.value) })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclassName='calculator__input'\n\t\t\t\t\t\taddonBefore='Wallet Size'\n\t\t\t\t\t\tplaceholder='Your total wallet size e.g. 100(USD)'\n\t\t\t\t\t\tvalue={data.walletSize}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetData({ ...data, walletSize: parseFloat(e.target.value) })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclassName='calculator__input'\n\t\t\t\t\t\taddonBefore='Max Wallet Loss (%)'\n\t\t\t\t\t\tplaceholder='Max % willing to lose  (whole wallet)'\n\t\t\t\t\t\tvalue={data.maxLoss}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetData({ ...data, maxLoss: parseFloat(e.target.value) })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclassName='calculator__input'\n\t\t\t\t\t\taddonBefore='Entry Price'\n\t\t\t\t\t\tplaceholder='Entry price of the asset'\n\t\t\t\t\t\tvalue={data.entryPrice}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetData({ ...data, entryPrice: parseFloat(e.target.value) })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclassName='calculator__input'\n\t\t\t\t\t\taddonBefore='Stop Loss'\n\t\t\t\t\t\tplaceholder='Stop loss target of the asset'\n\t\t\t\t\t\tvalue={data.stopLoss}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetData({ ...data, stopLoss: parseFloat(e.target.value) })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='calculator__result'>\n\t\t\t\t\t\t<h2>Result:</h2>\n\t\t\t\t\t\t{data.leverage !== \"\" &&\n\t\t\t\t\t\t\tdata.walletSize !== \"\" &&\n\t\t\t\t\t\t\tdata.maxLoss !== \"\" &&\n\t\t\t\t\t\t\tdata.entryPrice !== \"\" &&\n\t\t\t\t\t\t\tdata.stopLoss !== \"\" && (\n\t\t\t\t\t\t\t\t<div className='calculator__desc'>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t1% Move =&nbsp;\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t${data.entryPrice / 100}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tIf entry price reaches stop loss =\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t${priceDifference.toFixed(2)} (\n\t\t\t\t\t\t\t\t\t\t\t{differencePerct.toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t\t%)&nbsp;\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\tof price movement\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tUPNL will be{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{differencePerct.toFixed(2)}[%]\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\tx&nbsp;\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{data.leverage}\n\t\t\t\t\t\t\t\t\t\t\t[x]\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t=\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{unrealizedPNL.toFixed(2)}% (\n\t\t\t\t\t\t\t\t\t\t\t{(unrealizedPNL / 100).toFixed(2)}x)\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tInitial Margin Max Quota = max loss / UPNL ={\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{data.maxLoss}\n\t\t\t\t\t\t\t\t\t\t\t[%]\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t/{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{((differencePerct * data.leverage) / 100).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t\t[x]\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t={\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{maxQuota.toFixed(2)}%\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tMax margin ={\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t${data.walletSize}\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\tx{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t{maxQuota.toFixed(2)}%\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t/ 100 ={\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t${maxMargin.toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tIf stop loss hit, you will lose{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t${((data.maxLoss * data.walletSize) / 100).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThe amount of USD that you have to input in order is{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className='calculator__highlight'>\n\t\t\t\t\t\t\t\t\t\t\t~${(maxMargin * data.leverage).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className='calculator__result-text'>\n\t\t\t\t\t\t\tInitial Margin Max Quota:&nbsp;\n\t\t\t\t\t\t\t<span className='calculator__result-highlight'>\n\t\t\t\t\t\t\t\t{maxQuota.toFixed(2)}%\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='calculator__result-text'>\n\t\t\t\t\t\t\tMaximum Margin:{\" \"}\n\t\t\t\t\t\t\t<span className='calculator__result-highlight'>\n\t\t\t\t\t\t\t\t${maxMargin.toFixed(2)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}